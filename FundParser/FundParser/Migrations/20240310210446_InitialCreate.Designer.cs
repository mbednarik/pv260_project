// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FundParser.Migrations
{
    [DbContext(typeof(FundParserDbContext))]
    [Migration("20240310210446_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("DAL.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cusip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cusip = "CUSIP1",
                            Name = "Company1",
                            Ticker = "TICK1"
                        });
                });

            modelBuilder.Entity("DAL.Models.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Funds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fund1"
                        });
                });

            modelBuilder.Entity("DAL.Models.Holding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("FundId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MarketValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Shares")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FundId");

                    b.ToTable("Holdings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Date = new DateTime(2024, 3, 10, 22, 4, 46, 280, DateTimeKind.Local).AddTicks(5402),
                            FundId = 1,
                            MarketValue = 50000m,
                            Shares = 1000m,
                            Weight = 0.05m
                        });
                });

            modelBuilder.Entity("DAL.Models.HoldingDiff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FundId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HoldingId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Shares")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SharesChange")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FundId");

                    b.HasIndex("HoldingId");

                    b.ToTable("HoldingDiffs");
                });

            modelBuilder.Entity("DAL.Models.Holding", b =>
                {
                    b.HasOne("DAL.Models.Company", "Company")
                        .WithMany("Holdings")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Fund", "Fund")
                        .WithMany("Holdings")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Fund");
                });

            modelBuilder.Entity("DAL.Models.HoldingDiff", b =>
                {
                    b.HasOne("DAL.Models.Company", "Company")
                        .WithMany("HoldingDiffs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Fund", "Fund")
                        .WithMany("HoldingDiffs")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Holding", "Holding")
                        .WithMany()
                        .HasForeignKey("HoldingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Fund");

                    b.Navigation("Holding");
                });

            modelBuilder.Entity("DAL.Models.Company", b =>
                {
                    b.Navigation("HoldingDiffs");

                    b.Navigation("Holdings");
                });

            modelBuilder.Entity("DAL.Models.Fund", b =>
                {
                    b.Navigation("HoldingDiffs");

                    b.Navigation("Holdings");
                });
#pragma warning restore 612, 618
        }
    }
}
